AWSTemplateFormatVersion: "2010-09-09"
Description: Template generated by rain

Parameters:
  Env:
    Type: String
    Default: test
  NeedNat:
    Type: Number
    AllowedValues: [0, 1]
    Default: 0

Conditions:
  NeedNat: !Equals [!Ref NeedNat, 1]

Resources:
#############################################
# VPC, InternetGateway
#############################################
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub ${Env}-vpc

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${Env}-igw

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

##############################################
# PublicSubnet (AZ: ap-northeast-1a)
##############################################
  PublicSubnet1a:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref AWS::Region
      CidrBlock: !Select
        - 0
        - Fn::Cidr:
          - !GetAtt VPC.CidrBlock
          - 1
          - 8
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${Env}-pubsub-1a

  PublicRouteTable1a:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${Env}-pub-routetable-1a

  PublicSubnet1aRouteTable1aAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable1a
      SubnetId: !Ref PublicSubnet1a

  PublicRoute1a:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicRouteTable1a

############################################
# PublicSubnet (AZ: ap-northeast-1c)
############################################
  PublicSubnet1c:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref AWS::Region
      CidrBlock: !Select
        - 1
        - Fn::Cidr:
          - !GetAtt VPC.CidrBlock
          - 2
          - 8
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${Env}-pubsub-1c

  PublicRouteTable1c:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${Env}-pub-routetable-1c

  PublicSubnet1cRouteTable1cAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable1c
      SubnetId: !Ref PublicSubnet1c

  PublicRoute1c:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicRouteTable1c

############################################
# PublicSubnet (AZ: ap-northeast-1d)
############################################
#  PublicSubnet1d:
#    Type: AWS::EC2::Subnet
#    Properties:
#      AvailabilityZone: !Select
#        - 2
#        - Fn::GetAZs: !Ref AWS::Region
#      CidrBlock: !Select
#        - 2
#        - Fn::Cidr:
#          - !GetAtt VPC.CidrBlock
#          - 3
#          - 8
#      VpcId: !Ref VPC
#      Tags:
#        - Key: Name
#          Value: !Sub ${Env}-pubsub-1d
#
#  PublicRouteTable1d:
#    Type: AWS::EC2::RouteTable
#    Properties:
#      VpcId: !Ref VPC
#      Tags:
#        - Key: Name
#          Value: !Sub ${Env}-pub-routetable-1d
#
#  PublicSubnet1dRouteTable1cAssociation:
#    Type: AWS::EC2::SubnetRouteTableAssociation
#    Properties:
#      RouteTableId: !Ref PublicRouteTable1d
#      SubnetId: !Ref PublicSubnet1d
#
#  PublicRoute1d:
#    Type: AWS::EC2::Route
#    Properties:
#      DestinationCidrBlock: 0.0.0.0/0
#      GatewayId: !Ref InternetGateway
#      RouteTableId: !Ref PublicRouteTable1d

############################################
# PrivateSubnet (AZ: ap-northeast-1a)
############################################
  PrivateSubnet1a:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref AWS::Region
      CidrBlock: !Select
        - 3
        - Fn::Cidr:
          - !GetAtt VPC.CidrBlock
          - 4
          - 8
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${Env}-prisub-1a

  PrivateRouteTable1a:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${Env}-pri-routetable-1a

  PrivateSubnet1aRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1a
      SubnetId: !Ref PrivateSubnet1a

############################################
# PrivateSubnet (AZ: ap-northeast-1c)
############################################
  PrivateSubnet1c:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 1
        - Fn::GetAZs: !Ref AWS::Region
      CidrBlock: !Select
        - 4
        - Fn::Cidr:
          - !GetAtt VPC.CidrBlock
          - 5
          - 8
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${Env}-prisub-1c

  PrivateRouteTable1c:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${Env}-pri-routetable-1c

  PrivateSubnet1cRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1c
      SubnetId: !Ref PrivateSubnet1c

############################################
# PrivateSubnet (AZ: ap-northeast-1d)
############################################
#  PrivateSubnet1d:
#    Type: AWS::EC2::Subnet
#    Properties:
#      AvailabilityZone: !Select
#        - 2
#        - Fn::GetAZs: !Ref AWS::Region
#      CidrBlock: !Select
#        - 5
#        - Fn::Cidr:
#          - !GetAtt VPC.CidrBlock
#          - 6
#          - 8
#      VpcId: !Ref VPC
#      Tags:
#        - Key: Name
#          Value: !Sub ${Env}-prisub-1d
#
#  PrivateRouteTable1d:
#    Type: AWS::EC2::RouteTable
#    Properties:
#      VpcId: !Ref VPC
#      Tags:
#        - Key: Name
#          Value: !Sub ${Env}-pri-routetable-1d
#
#  PrivateSubnet1dRouteTableAssociation:
#    Type: AWS::EC2::SubnetRouteTableAssociation
#    Properties:
#      RouteTableId: !Ref PrivateRouteTable1d
#      SubnetId: !Ref PrivateSubnet1d

############################################
# NATGateway (AZ: ap-northeast-1a)
############################################
  NatGateway1a:
    Type: AWS::EC2::NatGateway
    Condition: NeedNat
    Properties:
      AllocationId: !GetAtt EIP1a.AllocationId
      SubnetId: !Ref PublicSubnet1a
      Tags:
        - Key: Name
          Value: !Sub ${Env}-nat-1a

  EIP1a:
    Type: AWS::EC2::EIP
    Condition: NeedNat
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub ${Env}-eip-1a

  NatRoute1a:
    Type: AWS::EC2::Route
    Condition: NeedNat
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref NatGateway1a
      RouteTableId: !Ref PrivateSubnet1a

############################################
# NATGateway (AZ: ap-northeast-1c)
############################################
  NatGateway1c:
    Type: AWS::EC2::NatGateway
    Condition: NeedNat
    Properties:
      AllocationId: !GetAtt EIP1c.AllocationId
      SubnetId: !Ref PublicSubnet1c
      Tags:
        - Key: Name
          Value: !Sub ${Env}-nat-1c

  EIP1c:
    Type: AWS::EC2::EIP
    Condition: NeedNat
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub ${Env}-eip-1c

  NatRoute1c:
    Type: AWS::EC2::Route
    Condition: NeedNat
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref NatGateway1c
      RouteTableId: !Ref PrivateSubnet1c

Outputs:
  VpcId:
    Value: !Ref VPC
    Export:
      Name: !Sub ${Env}-VpcId

  PublicSubnet1a:
    Value: !Ref PublicSubnet1a
    Export:
      Name: !Sub ${Env}-PublicSubnet1a

  PublicSubnet1c:
    Value: !Ref PublicSubnet1c
    Export:
      Name: !Sub ${Env}-PublicSubnet1c

        #PublicSubnet1d:
        #  Value: !Ref PublicSubnet1d
        #  Export:
        #    Name: !Sub ${Env}-PublicSubnet1d

  PrivateSubnet1a:
    Value: !Ref PrivateSubnet1a
    Export:
      Name: !Sub ${Env}-PrivateSubnet1a

  PrivateSubnet1c:
    Value: !Ref PrivateSubnet1c
    Export:
      Name: !Sub ${Env}-PrivateSubnet1c

        #PrivateSubnet1d:
        #  Value: !Ref PrivateSubnet1d
        #  Export:
        #    Name: !Sub ${Env}-PrivateSubnet1d
