AWSTemplateFormatVersion: "2010-09-09"
Description: Template generated by rain

Parameters:
  Env:
    Type: String
    Default: test
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: The EC2 Key Pair to allow SSH access to the instance
  EC2InstanceType:
    Type: String
    Default: t2.micro 
    AllowedValues: [t2.micro, t3.micro]
    Description: Enter t2.micro or t3.micro
  EC2AMIID:
    Type: String
    Default: ami-032d6db78f84e8bf5
  EC2LaunchTemplateVersion:
    Type: String
    Default: 1

Resources:
  WebSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Web Security Group
      GroupName: !Sub ${Env}-web-secgroup
      VpcId:
        Fn::ImportValue:
          !Sub ${Env}-VpcId
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80
          IpProtocol: tcp
        - CidrIp: 0.0.0.0/0
          FromPort: 443
          ToPort: 443
          IpProtocol: tcp
        - CidrIp: 0.0.0.0/0
          FromPort: 22
          ToPort: 22
          IpProtocol: tcp
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80
          IpProtocol: tcp
        - CidrIp: 0.0.0.0/0
          FromPort: 443
          ToPort: 443
          IpProtocol: tcp
        - CidrIp: 0.0.0.0/0
          FromPort: 5432
          ToPort: 5432
          IpProtocol: tcp
      Tags:
        - Key: Name
          Value: !Sub ${Env}-web-secgroup

  EC2InstanceRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"

  EC2EnableAccessS3Policy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: EC2FullAccessS3Policy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action: "s3:*"
          Resource:
            - "arn:aws:s3:::*"
      Roles:
      - !Ref EC2InstanceRole

  EC2EnableAccessCloudWatch:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: EC2FullAccessCloudWatchPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action: "cloudwatch:*"
          Resource:
            - "arn:aws:cloudwatch:::*"
      Roles:
      - !Ref EC2InstanceRole

  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: EC2InstanceProfile
      Roles:
        - !Ref EC2InstanceRole

  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref EC2LaunchTemplate
        Version: !GetAtt EC2LaunchTemplate.LatestVersionNumber
      Tags:
        - Key: Name
          Value: !Sub ${Env}-ec2

  EC2LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: EC2Template
      LaunchTemplateData:
        ImageId: !Ref EC2AMIID
        InstanceType: !Ref EC2InstanceType
        KeyName: !Ref KeyName
        IamInstanceProfile:
          Arn: !GetAtt EC2InstanceProfile.Arn
        Monitoring:
          Enabled: true
        NetworkInterfaces:
          - AssociatePublicIpAddress: true
            DeleteOnTermination: true
            DeviceIndex: 0
            SubnetId:
              Fn::ImportValue:
                !Sub ${Env}-PublicSubnet1a
            Groups:
              - !Ref WebSecurityGroup
        BlockDeviceMappings:
          - DeviceName: /dev/xvda
            Ebs:
              DeleteOnTermination: true
              Encrypted: true
              VolumeSize: 8
              VolumeType: gp2
        UserData:
          Fn::Base64: |
            sudo yum -y install git nginx php amazon-cloudwatch-agent posgresql
        InstanceInitiatedShutdownBehavior: stop
          #TagSpecifications:
          #  - ResourceType: instance
          #    Tags:
          #      - Key: Name
          #        Value: !Sub ${Env}-web

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: EC2AutoScalingGroup
      AvailabilityZones:
        - !Select
          - 0
          - Fn::GetAZs: !Ref AWS::Region
        - !Select
          - 1
          - Fn::GetAZs: !Ref AWS::Region
      CapacityRebalance: false # Optional
      Cooldown: 300
      DesiredCapacityType: units
      DesiredCapacity: 1
      MinSize: 1
      MaxSize: 1
      HealthCheckType: EC2
      HealthCheckGracePeriod: 120
      LaunchTemplate:
        LaunchTemplateId: !Ref EC2LaunchTemplate
        Version: !GetAtt EC2LaunchTemplate.LatestVersionNumber
      LifecycleHookSpecificationList:
        - DefaultResult: ABANDON
          HeartbeatTimeout: 120
          LifecycleHookName: EC2LifecycleHook
          LifecycleTransition: EC2_INSTANCE_LAUNCHING
            # NotificationMetadata: CHANGEME # Optional
            # NotificationTargetARN: CHANGEME # Optional
            # RoleARN: CHANGEME # Optional
      MaxInstanceLifetime: 0
      MetricsCollection:
        - Granularity: 1Minute
          Metrics:
            - GroupInServiceInstances
            - GroupPendingInstances
            - GroupStandbyInstances
            - GroupTotalInstances
              #MixedInstancesPolicy: # Optional
              #  InstancesDistribution: # Optional
              #    OnDemandAllocationStrategy: CHANGEME # Optional
              #    OnDemandBaseCapacity: 0 # Optional
              #    OnDemandPercentageAboveBaseCapacity: 0 # Optional
              #    SpotAllocationStrategy: CHANGEME # Optional
              #    SpotInstancePools: 0 # Optional
              #    SpotMaxPrice: CHANGEME # Optional
              #  LaunchTemplate:
              #    LaunchTemplateSpecification:
              #      LaunchTemplateId: CHANGEME # Optional
              #      LaunchTemplateName: CHANGEME # Optional
              #      Version: CHANGEME
              #    Overrides: # Optional
              #      - InstanceType: CHANGEME # Optional
              #        LaunchTemplateSpecification: # Optional
              #          LaunchTemplateId: CHANGEME # Optional
              #          LaunchTemplateName: CHANGEME # Optional
              #          Version: CHANGEME
              #        WeightedCapacity: CHANGEME # Optional
      NewInstancesProtectedFromScaleIn: false
        # NotificationConfigurations:
        #   - NotificationTypes:
        #       - autoscaling:EC2_INSTANCE_LAUNCH
        #       - autoscaling:EC2_INSTANCE_LAUNCH_ERROR
        #       - autoscaling:EC2_INSTANCE_TERMINATE
        #       - autoscaling:EC2_INSTANCE_TERMINATE_ERROR
        #     TopicARN: CHANGEME
        #PlacementGroup: CHANGEME # Optional
        #ServiceLinkedRoleARN: CHANGEME # Optional
      Tags:
        - Key: Name
          Value: !Sub ${Env}-ec2
          PropagateAtLaunch: true
      TargetGroupARNs:
        - Fn::ImportValue:
            !Sub ${Env}-ALBTargetGroup
      TerminationPolicies:
        - OldestInstance
      VPCZoneIdentifier:
        - Fn::ImportValue:
            !Sub ${Env}-PublicSubnet1a
        - Fn::ImportValue:
            !Sub ${Env}-PublicSubnet1c

Outputs:
  WebSecurityGroup:
    Value: !Ref WebSecurityGroup
    Export:
      Name: !Sub ${Env}-WebSecurityGroup
