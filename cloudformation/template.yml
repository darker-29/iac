AWSTemplateFormatVersion: "2010-09-09"
Description: Template generated by rain

Parameters:
  Name:
    Type: String
    Default: nobody
    Description: 'Enter Your Name. (Exam: d-ito)'
  KeyName:
    Description: The EC2 Key Pair to allow SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub '${Name}-vpc'

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub '${Name}-igw'

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref AWS::Region
      CidrBlock: !Select
        - 0
        - Fn::Cidr:
          - !GetAtt VPC.CidrBlock
          - 1
          - 8
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${Name}-pubsub'

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${Name}-pub-routetable'

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicRouteTable

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref AWS::Region
      CidrBlock: !Select
        - 1
        - Fn::Cidr:
          - !GetAtt VPC.CidrBlock
          - 2
          - 8
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${Name}-prisub'

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${Name}-pri-routetable'

  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet

  WebSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Web Security Group
      GroupName: web-secgroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          FromPort: 3306
          ToPort: 3306
          IpProtocol: tcp
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80
          IpProtocol: tcp
        - CidrIp: 0.0.0.0/0
          FromPort: 443
          ToPort: 443
          IpProtocol: tcp
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80
          IpProtocol: tcp
        - CidrIp: 0.0.0.0/0
          FromPort: 443
          ToPort: 443
          IpProtocol: tcp
        - CidrIp: 0.0.0.0/0
          FromPort: 22
          ToPort: 22
          IpProtocol: tcp
      Tags:
        - Key: Name
          Value: !Sub '${Name}-web-secgroup'
      VpcId: !Ref VPC

  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: DB Security Group
      GroupName: db-secgroup
      SecurityGroupEgress:
        - DestinationSecurityGroupId: !Ref WebSecurityGroup
          FromPort: 3306
          IpProtocol: tcp
          ToPort: 3306
      Tags:
        - Key: Name
          Value: !Sub '${Name}-db-secgroup'
      VpcId: !Ref VPC

  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-032d6db78f84e8bf5
      KeyName: !Ref KeyName
      InstanceType: t2.micro
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          SubnetId: !Ref PublicSubnet
          GroupSet:
            - !Ref WebSecurityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            DeleteOnTermination: true
            Encrypted: false
            VolumeSize: 8
            VolumeType: gp2
      UserData: !Base64 |
        #!/bin/bash
        sudo yum install -y git
      Tags:
        - Key: Name
          Value: ec2-tmp

  SecureLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /var/log/secure
      RetentionInDays: 90

  SSHAcceptedAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref AcceptedSSHLoginTopic
      AlarmDescription: Alert Accepted SSH Login
      AlarmName: Alert-Accepted-SSH-Login
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      EvaluationPeriods: 1
      MetricName: Accepted-SSH-Login
      Namespace: AWS/EC2
      Period: 60
      Statistic: Average
      Threshold: 1

  AcceptedSSHLoginMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern: Accepted
      LogGroupName: !Ref SecureLogGroup
      MetricTransformations:
        - DefaultValue: 0
          MetricName: Accepted-SSH-Login
          MetricNamespace: EC2Bastion
          MetricValue: 1

  AcceptedSSHLoginTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: false
      FifoTopic: false
      KmsMasterKeyId: false
      Subscription:
        - Endpoint: ito@gizumo-inc.jp
          Protocol: email
      Tags:
        - Key: Name
          Value: AcceptedSSHLoginAlert
      TopicName: Accepted-SSH-Login

